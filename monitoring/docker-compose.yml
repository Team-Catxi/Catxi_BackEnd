services:
  prometheus:
    image: prom/prometheus:latest
    container_name: catxi_prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./prometheus/alerts:/etc/prometheus/alerts:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=30d'
      - '--web.enable-lifecycle'
      - '--storage.tsdb.retention.size=8GB'
      - '--web.enable-admin-api'
      - '--web.route-prefix=/'
      - '--web.enable-remote-write-receiver'
      - '--query.timeout=2m'
      - '--query.max-concurrency=20'
      - '--log.level=warn'
    deploy:
      resources:
        limits:
          memory: 2g
          cpus: '1.0'
        reservations:
          memory: 1g
          cpus: '0.5'
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:9090/-/healthy"]
      interval: 30s
      timeout: 15s
      retries: 3
      start_period: 60s

  grafana:
    image: grafana/grafana:latest
    container_name: catxi_grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD}
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=grafana-piechart-panel
      - GF_SERVER_ENABLE_GZIP=true
      - GF_ANALYTICS_REPORTING_ENABLED=false
      - GF_SECURITY_DISABLE_GRAVATAR=true
      - GF_SECURITY_COOKIE_SECURE=false
      - GF_SECURITY_COOKIE_SAMESITE=lax
      - GF_LOG_LEVEL=info
      - GF_SERVER_ROOT_URL=${GF_SERVER_ROOT_URL}
      - GF_SECURITY_SECRET_KEY=${GRAFANA_SECRET_KEY}
      - GF_SERVER_ENFORCE_DOMAIN=false
      - GF_AUTH_LOGIN_MAXIMUM_INACTIVE_LIFETIME_DAYS=7
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/etc/grafana/dashboards
    deploy:
      resources:
        limits:
          memory: 512m
        reservations:
          memory: 256m
    depends_on:
      - prometheus
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3000/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  node-exporter:
    image: prom/node-exporter:latest
    container_name: catxi_node_exporter
    restart: unless-stopped
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--timeout=5", "--spider", "http://localhost:9100/"]
      interval: 35s
      timeout: 15s
      retries: 3
      start_period: 30s
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
      - '--no-collector.ipvs'
      - '--no-collector.netstat'
      - '--no-collector.sockstat'
      - '--no-collector.softnet'
      - '--no-collector.netdev'
      - '--no-collector.netclass'
      - '--web.max-requests=50'
      - '--log.level=warn'
    deploy:
      resources:
        limits:
          memory: 512m
          cpus: '0.5'
        reservations:
          memory: 256m
          cpus: '0.25'

  redis-exporter:
    image: oliver006/redis_exporter:latest
    container_name: catxi_redis_exporter
    restart: unless-stopped
    ports:
      - "9121:9121"
    environment:
      - REDIS_ADDR=redis://${REDIS_HOST}:${REDIS_PORT}
      - REDIS_PASSWORD=${REDIS_PW}
      - REDIS_EXPORTER_CHECK_KEYS=*
      - REDIS_EXPORTER_SKIP_TLS_VERIFICATION=true
    env_file:
      - .env
    deploy:
      resources:
        limits:
          memory: 128m
        reservations:
          memory: 64m
    healthcheck:
      disable: true

  pushgateway:
    image: prom/pushgateway:latest
    container_name: catxi_pushgateway
    restart: unless-stopped
    ports:
      - "9091:9091"
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:9091/metrics"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 256m
        reservations:
          memory: 128m

  loki:
    image: grafana/loki:latest
    container_name: catxi_loki
    restart: unless-stopped
    ports:
      - "3100:3100"
    volumes:
      - ./loki:/etc/loki
      - loki_data:/loki
    command: -config.file=/etc/loki/loki.yml
    deploy:
      resources:
        limits:
          memory: 512m
        reservations:
          memory: 256m
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3100/ready"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  promtail:
    image: grafana/promtail:latest
    container_name: catxi_promtail
    restart: unless-stopped
    volumes:
      - ./promtail:/etc/promtail
      - /var/log:/var/log:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
    command: -config.file=/etc/promtail/promtail.yml
    deploy:
      resources:
        limits:
          memory: 128m
        reservations:
          memory: 64m
    depends_on:
      - loki

  alertmanager:
    image: prom/alertmanager:v0.28.1
    container_name: catxi_alertmanager
    restart: unless-stopped
    ports:
      - "9093:9093"
    volumes:
      - ./alertmanager:/etc/alertmanager:ro
      - alertmanager_data:/alertmanager
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
      - '--web.external-url=http://localhost:9093'
    deploy:
      resources:
        limits:
          memory: 256m
        reservations:
          memory: 128m
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:9093/-/healthy"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  prometheus_data:
  grafana_data:
  alertmanager_data:
  loki_data:
  catxi-logs:
    external: true

networks:
  default:
    name: catxi_monitoring
